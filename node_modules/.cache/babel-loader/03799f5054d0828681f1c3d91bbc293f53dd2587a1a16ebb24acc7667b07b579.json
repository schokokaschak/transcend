{"ast":null,"code":"var _jsxFileName = \"/Users/kaschak/Documents/Coding projects/trans/tran/src/Tournament.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TournamentReg from './TournamentReg';\nimport PingPongGameT from './PingPongGameT';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tournament() {\n  _s();\n  const [showRegistrationForm, setShowRegistrationForm] = useState(false);\n  const [players, setPlayers] = useState([]);\n  const [matchups, setMatchups] = useState([]);\n  const [regcomp, setRegcomp] = useState(false);\n  const [currentMatchupIndex, setCurrentMatchupIndex] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [winners, setWinners] = useState([]);\n  const [firstRoundCompleted, setFirstRoundCompleted] = useState(false);\n  const handleSubmit = playerData => {\n    setPlayers(playerData);\n    setShowRegistrationForm(false);\n    const newMatchups = createMatchups(playerData);\n    setMatchups(newMatchups);\n    setRegcomp(true);\n  };\n  const createMatchups = players => {\n    const allPlayers = [...players, ...winners];\n    const shuffledPlayers = [...allPlayers].sort(() => 0.5 - Math.random());\n    const matchups = [];\n    const numPlayers = winners.length;\n    for (let i = 0; i < numPlayers; i += 2) {\n      matchups.push([shuffledPlayers[i], shuffledPlayers[i + 1]]);\n    }\n    return matchups;\n  };\n  const startMatch = index => {\n    setCurrentMatchupIndex(index);\n    setGameStarted(true);\n  };\n  const handleFinishMatch = winner => {\n    setWinners([...winners, winner]);\n    setCurrentMatchupIndex(null);\n    setGameStarted(false);\n  };\n  useEffect(() => {\n    if (currentMatchupIndex === null) return;\n    if (currentMatchupIndex === matchups.length - 1) {\n      setFirstRoundCompleted(true);\n    }\n  }, [currentMatchupIndex, matchups.length]); // Abhängigkeit hinzufügen\n\n  useEffect(() => {\n    if (firstRoundCompleted && winners.length === players.length / 2) {\n      const newMatchups = createMatchups(winners);\n      setMatchups(newMatchups);\n      setFirstRoundCompleted(false);\n    }\n  }, [firstRoundCompleted, winners, players]); // Abhängigkeiten hinzufügen\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!gameStarted && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tournament\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this), !showRegistrationForm && !regcomp && !gameStarted && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowRegistrationForm(true),\n      children: \"Tournament Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), !gameStarted && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: matchups.map((matchup, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: `${matchup[0]} vs ${matchup[1]}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startMatch(index),\n            children: \"Start Match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), showRegistrationForm && /*#__PURE__*/_jsxDEV(TournamentReg, {\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 32\n    }, this), gameStarted && /*#__PURE__*/_jsxDEV(PingPongGameT, {\n      player1: matchups[currentMatchupIndex][0],\n      player2: matchups[currentMatchupIndex][1],\n      onFinish: handleFinishMatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), firstRoundCompleted && winners.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Next Matchups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: matchups.map((matchup, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: `${matchup[0]} vs ${matchup[1]}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => startMatch(index),\n            children: \"Start Match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Tournament, \"Le5Z0j+p+ghoAYyCkqFUGkc5aHA=\");\n_c = Tournament;\nexport default Tournament;\nvar _c;\n$RefreshReg$(_c, \"Tournament\");","map":{"version":3,"names":["React","useState","useEffect","TournamentReg","PingPongGameT","jsxDEV","_jsxDEV","Tournament","_s","showRegistrationForm","setShowRegistrationForm","players","setPlayers","matchups","setMatchups","regcomp","setRegcomp","currentMatchupIndex","setCurrentMatchupIndex","gameStarted","setGameStarted","winners","setWinners","firstRoundCompleted","setFirstRoundCompleted","handleSubmit","playerData","newMatchups","createMatchups","allPlayers","shuffledPlayers","sort","Math","random","numPlayers","length","i","push","startMatch","index","handleFinishMatch","winner","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","matchup","onSubmit","player1","player2","onFinish","_c","$RefreshReg$"],"sources":["/Users/kaschak/Documents/Coding projects/trans/tran/src/Tournament.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TournamentReg from './TournamentReg';\nimport PingPongGameT from './PingPongGameT';\n\nfunction Tournament() {\n  const [showRegistrationForm, setShowRegistrationForm] = useState(false);\n  const [players, setPlayers] = useState([]);\n  const [matchups, setMatchups] = useState([]);\n  const [regcomp, setRegcomp] = useState(false);\n  const [currentMatchupIndex, setCurrentMatchupIndex] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [winners, setWinners] = useState([]);\n  const [firstRoundCompleted, setFirstRoundCompleted] = useState(false);\n\n  const handleSubmit = (playerData) => {\n    setPlayers(playerData);\n    setShowRegistrationForm(false);\n    const newMatchups = createMatchups(playerData);\n    setMatchups(newMatchups);\n    setRegcomp(true);\n  };\n\n  const createMatchups = (players) => {\n\tconst allPlayers = [...players, ...winners];\n\tconst shuffledPlayers = [...allPlayers].sort(() => 0.5 - Math.random());\n\tconst matchups = [];\n\tconst numPlayers = winners.length;\n\tfor (let i = 0; i < numPlayers; i += 2) {\n\t  matchups.push([shuffledPlayers[i], shuffledPlayers[i + 1]]);\n\t}\n\treturn matchups;\n  };\n\n  const startMatch = (index) => {\n    setCurrentMatchupIndex(index);\n    setGameStarted(true);\n  };\n\n  const handleFinishMatch = (winner) => {\n    setWinners([...winners, winner]);\n    setCurrentMatchupIndex(null);\n    setGameStarted(false);\n  };\n\n  useEffect(() => {\n    if (currentMatchupIndex === null) return;\n    if (currentMatchupIndex === matchups.length - 1) {\n      setFirstRoundCompleted(true);\n    }\n  }, [currentMatchupIndex, matchups.length]); // Abhängigkeit hinzufügen\n\n  useEffect(() => {\n    if (firstRoundCompleted && winners.length === players.length / 2) {\n      const newMatchups = createMatchups(winners);\n      setMatchups(newMatchups);\n      setFirstRoundCompleted(false);\n    }\n  }, [firstRoundCompleted, winners, players]); // Abhängigkeiten hinzufügen\n\n  return (\n    <div>\n      {!gameStarted && <h1>Tournament</h1>}\n      {!showRegistrationForm && !regcomp && !gameStarted && (\n        <button onClick={() => setShowRegistrationForm(true)}>Tournament Registration</button>\n      )}\n      {!gameStarted && (\n        <div>\n          <ul>\n            {matchups.map((matchup, index) => (\n              <li key={index}>\n                <span>{`${matchup[0]} vs ${matchup[1]}`}</span>\n                <button onClick={() => startMatch(index)}>Start Match</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {showRegistrationForm && <TournamentReg onSubmit={handleSubmit} />}\n      {gameStarted && (\n        <PingPongGameT\n          player1={matchups[currentMatchupIndex][0]}\n          player2={matchups[currentMatchupIndex][1]}\n          onFinish={handleFinishMatch}\n        />\n      )}\n      {firstRoundCompleted && winners.length > 0 && (\n        <div>\n          <h2>Next Matchups</h2>\n          <ul>\n            {matchups.map((matchup, index) => (\n              <li key={index}>\n                <span>{`${matchup[0]} vs ${matchup[1]}`}</span>\n                <button onClick={() => startMatch(index)}>Start Match</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Tournament;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}