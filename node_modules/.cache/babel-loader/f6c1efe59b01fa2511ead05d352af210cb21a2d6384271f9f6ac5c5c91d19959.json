{"ast":null,"code":"var _jsxFileName = \"/Users/kaschak/Documents/Coding projects/trans/tran/src/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // Fetch user information and match history from backend\n  useEffect(() => {\n    const backendURL = 'http://localhost:8000/user/';\n    const userId = localStorage.getItem('userId'); // Annahme: Die Benutzer-ID ist unter dem Schlüssel 'userId' im localStorage gespeichert\n\n    if (!userId) {\n      // Fehlerbehandlung, falls die Benutzer-ID nicht im localStorage gefunden wurde\n      console.error('Benutzer-ID nicht im localStorage gefunden');\n      return; // Beenden Sie die Funktion oder geben Sie eine Fehlermeldung aus, wie Sie es wünschen\n    }\n    const requestURL = `${backendURL}${userId}`;\n\n    // Jetzt können Sie requestURL verwenden, um eine Anfrage an das Backend zu senden\n    // Zum Beispiel: fetch(requestURL, { method: 'GET' })\n\n    fetch(requestURL, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.ok) {\n        // Die Antwort des Servers in JSON umwandeln\n        return response.json();\n      } else {\n        // Wenn die Antwort nicht ok ist, zeige eine Fehlermeldung an\n        throw new Error('Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut.');\n      }\n    }).then(data => {\n      // Den Token aus der Antwort extrahieren\n\n      // Weiterleiten oder andere Aktionen ausführen\n    }).catch(error => {\n      // Fehlerbehandlung, falls ein Fehler auftritt\n      console.error('Fehler beim Senden der Registrierungsdaten:', error);\n      alert(error.message); // Fehlermeldung anzeigen\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to your profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Name: \", data.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Alias: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", data.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","backendURL","userId","localStorage","getItem","console","error","requestURL","fetch","method","headers","then","response","ok","json","Error","data","catch","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","username","email","_c","$RefreshReg$"],"sources":["/Users/kaschak/Documents/Coding projects/trans/tran/src/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Dashboard = () => {\n\n  // Fetch user information and match history from backend\n  useEffect(() => {\n\n    const backendURL = 'http://localhost:8000/user/';\nconst userId = localStorage.getItem('userId'); // Annahme: Die Benutzer-ID ist unter dem Schlüssel 'userId' im localStorage gespeichert\n\nif (!userId) {\n  // Fehlerbehandlung, falls die Benutzer-ID nicht im localStorage gefunden wurde\n  console.error('Benutzer-ID nicht im localStorage gefunden');\n  return; // Beenden Sie die Funktion oder geben Sie eine Fehlermeldung aus, wie Sie es wünschen\n}\n\nconst requestURL = `${backendURL}${userId}`;\n\n// Jetzt können Sie requestURL verwenden, um eine Anfrage an das Backend zu senden\n// Zum Beispiel: fetch(requestURL, { method: 'GET' })\n\n\n    fetch(requestURL, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      \n    })\n    .then(response => {\n    if (response.ok) {\n      // Die Antwort des Servers in JSON umwandeln\n      return response.json();\n    } else {\n      // Wenn die Antwort nicht ok ist, zeige eine Fehlermeldung an\n      throw new Error('Es ist ein Fehler aufgetreten. Bitte versuchen Sie es später erneut.');\n    }\n    })\n    .then(data => {\n    // Den Token aus der Antwort extrahieren\n\n    // Weiterleiten oder andere Aktionen ausführen\n\n    })\n    .catch(error => {\n      // Fehlerbehandlung, falls ein Fehler auftritt\n      console.error('Fehler beim Senden der Registrierungsdaten:', error);\n      alert(error.message); // Fehlermeldung anzeigen\n    });\n  \n  }, []);\n\n  \n\n  return (\n    <div>\n      <h1>Welcome to your profile</h1>\n      <p>Name: {data.username}</p>\n      <p>Alias: </p>\n\t  <p>Email: {data.email}</p>\n      \n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB;EACAJ,SAAS,CAAC,MAAM;IAEd,MAAMK,UAAU,GAAG,6BAA6B;IACpD,MAAMC,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;;IAE/C,IAAI,CAACF,MAAM,EAAE;MACX;MACAG,OAAO,CAACC,KAAK,CAAC,4CAA4C,CAAC;MAC3D,OAAO,CAAC;IACV;IAEA,MAAMC,UAAU,GAAI,GAAEN,UAAW,GAAEC,MAAO,EAAC;;IAE3C;IACA;;IAGIM,KAAK,CAACD,UAAU,EAAE;MAChBE,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IAEF,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;MAClB,IAAIA,QAAQ,CAACC,EAAE,EAAE;QACf;QACA,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC;MACxB,CAAC,MAAM;QACL;QACA,MAAM,IAAIC,KAAK,CAAC,sEAAsE,CAAC;MACzF;IACA,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACd;;MAEA;IAAA,CAEC,CAAC,CACDC,KAAK,CAACX,KAAK,IAAI;MACd;MACAD,OAAO,CAACC,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC;MACnEY,KAAK,CAACZ,KAAK,CAACa,OAAO,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC;EAEJ,CAAC,EAAE,EAAE,CAAC;EAIN,oBACErB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC1B,OAAA;MAAAsB,QAAA,GAAG,QAAM,EAACJ,IAAI,CAACS,QAAQ;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B1B,OAAA;MAAAsB,QAAA,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACjB1B,OAAA;MAAAsB,QAAA,GAAG,SAAO,EAACJ,IAAI,CAACU,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpB,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7DID,SAAS;AAAA4B,EAAA,GAAT5B,SAAS;AA+Df,eAAeA,SAAS;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}