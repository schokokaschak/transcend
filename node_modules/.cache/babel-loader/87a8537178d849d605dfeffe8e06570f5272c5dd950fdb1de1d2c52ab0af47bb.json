{"ast":null,"code":"var _jsxFileName = \"/Users/kaschak/Documents/Coding projects/trans/tran/src/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [selectedFriend, setSelectedFriend] = useState(null);\n  const [chatData, setChatData] = useState(null);\n  const backendURL = 'http://localhost:8000/chats/';\n  const handleSendMessage = () => {};\n  let socket = null;\n  useEffect(() => {\n    fetch(backendURL, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${localStorage.getItem('Token')}` // Include the token in the Authorization header\n      }\n    }).then(response => response.json()).then(data => {\n      setChatData(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []); // Empty array means this effect runs once on mount\n\n  const handleFriendClick = chat => {\n    setSelectedFriend(chat);\n\n    // If the WebSocket connection is already open, close it\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.close();\n    }\n\n    // Create a new WebSocket connection\n    socket = new WebSocket('ws://localhost:8000/ws/chat/' + chat.participant2.id + '/?token=' + localStorage.getItem('Token') + '/');\n\n    // Connection opened\n    socket.addEventListener('open', event => {\n      socket.send('Hello Server!');\n    });\n\n    // Listen for messages\n    socket.addEventListener('message', event => {\n      console.log('Message from server: ', event.data);\n    });\n\n    // Connection closed\n    socket.addEventListener('close', event => {\n      console.log('Server connection closed: ', event.code);\n    });\n\n    // Connection error\n    socket.addEventListener('error', event => {\n      console.error('WebSocket error: ', event);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Friends List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: chatData ? chatData.map((chat, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          onClick: () => handleFriendClick(chat),\n          children: chat.participant2.username\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }, this)) : \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-8\",\n      children: selectedFriend && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Chat with \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectedFriend.messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n_s(Chat, \"d3pv96A0MHlx5zRGgAYgpdM6sfM=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","ListGroup","ListGroupItem","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","selectedFriend","setSelectedFriend","chatData","setChatData","backendURL","handleSendMessage","socket","fetch","method","headers","localStorage","getItem","then","response","json","data","catch","error","console","handleFriendClick","chat","readyState","WebSocket","OPEN","close","participant2","id","addEventListener","event","send","log","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","username","messages","text","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/kaschak/Documents/Coding projects/trans/tran/src/Chat.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\n\nconst Chat = () => {\n\tconst [message, setMessage] = useState('');\n\t\n\tconst [selectedFriend, setSelectedFriend] = useState(null);\n\tconst [chatData, setChatData] = useState(null);\n\n\tconst backendURL = 'http://localhost:8000/chats/'\n\tconst handleSendMessage = () => {\n\t\t\n\t};\n\tlet socket = null;\n\n\tuseEffect(() => {\n\t\tfetch(backendURL, {\n\t\t  method: 'GET',\n\t\t  headers: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Authorization': `Token ${localStorage.getItem('Token')}` // Include the token in the Authorization header\n\t\t  },\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(data => {\n\t\t  setChatData(data);\n\t\t})\n\t\t.catch((error) => {\n\t\t  console.error('Error:', error);\n\t\t});\n\t  }, []); // Empty array means this effect runs once on mount\n\t  \n\t  const handleFriendClick = (chat) => {\n\t\tsetSelectedFriend(chat);\n\t  \n\t\t// If the WebSocket connection is already open, close it\n\t\tif (socket && socket.readyState === WebSocket.OPEN) {\n\t\t  socket.close();\n\t\t}\n\t  \n\t\t// Create a new WebSocket connection\n\t\tsocket = new WebSocket('ws://localhost:8000/ws/chat/' + chat.participant2.id + '/?token=' + localStorage.getItem('Token') + '/');\n\t  \n\t\t// Connection opened\n\t\tsocket.addEventListener('open', (event) => {\n\t\t  socket.send('Hello Server!');\n\t\t});\n\t  \n\t\t// Listen for messages\n\t\tsocket.addEventListener('message', (event) => {\n\t\t  console.log('Message from server: ', event.data);\n\t\t});\n\t  \n\t\t// Connection closed\n\t\tsocket.addEventListener('close', (event) => {\n\t\t  console.log('Server connection closed: ', event.code);\n\t\t});\n\t  \n\t\t// Connection error\n\t\tsocket.addEventListener('error', (event) => {\n\t\t  console.error('WebSocket error: ', event);\n\t\t});\n\t  };\n\t\n\n\t  return (\n\t\t<div className=\"row\">\n\t\t  <div className=\"col-md-4\">\n\t\t\t<h1>Friends List</h1>\n\t\t\t<ListGroup>\n\t\t\t  {chatData ? chatData.map((chat, index) => (\n\t\t\t\t<ListGroupItem key={index} onClick={() => handleFriendClick(chat)}>\n\t\t\t\t  {chat.participant2.username}\n\t\t\t\t</ListGroupItem>\n\t\t\t  )) : \"Loading...\"}\n\t\t\t</ListGroup>\n\t\t  </div>\n\t\t  <div className=\"col-md-8\">\n\t\t\t{selectedFriend && (\n\t\t\t\t<div>\n\t\t\t\t<h1>Chat with </h1>\n\t\t\t\t<div>\n\t\t\t\t\t{\n\t\t\t\t\tselectedFriend.messages.map((message, index) => (\n\t\t\t\t\t\t<p key={index}>{message.text}</p>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={message}\n\t\t\t\t\tonChange={e => setMessage(e.target.value)}\n\t\t\t\t/>\n\t\t\t\t<button onClick={handleSendMessage}>Send</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t  );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}