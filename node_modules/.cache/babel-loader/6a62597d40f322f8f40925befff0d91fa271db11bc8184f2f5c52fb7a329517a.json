{"ast":null,"code":"var _jsxFileName = \"/Users/kaschak/Documents/Coding projects/trans/tran/src/TournamentReg.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './css/TournamentReg.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TournamentReg({\n  onSubmit\n}) {\n  _s();\n  const [step, setStep] = useState(1);\n  const [playerCount, setPlayerCount] = useState('');\n  const [playerNames, setPlayerNames] = useState([]);\n  const handlePlayerCountSubmit = event => {\n    event.preventDefault();\n    if (playerCount >= 2 && playerCount <= 8) {\n      setPlayerNames(Array(parseInt(playerCount)).fill(''));\n      setStep(2);\n    } else {\n      alert('Please enter a valid player count between 2 and 8.');\n    }\n  };\n  const handlePlayerNamesSubmit = event => {\n    event.preventDefault();\n    onSubmit(playerNames.slice(0, playerCount));\n  };\n  const handlePlayerNameChange = (index, event) => {\n    const newPlayerNames = [...playerNames];\n    newPlayerNames[index] = event.target.value;\n    setPlayerNames(newPlayerNames);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: step === 1 && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePlayerCountSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"How many players will participate?\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"2\",\n            max: \"8\",\n            value: playerCount,\n            onChange: event => setPlayerCount(event.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: step === 2 && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handlePlayerNamesSubmit,\n        children: [playerNames.map((name, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Player \", index + 1, \" Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: event => handlePlayerNameChange(index, event),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Start Tournament\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(TournamentReg, \"RMvDcOq7Pz5eZl8wbHhONjskyUg=\");\n_c = TournamentReg;\nexport default TournamentReg;\nvar _c;\n$RefreshReg$(_c, \"TournamentReg\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TournamentReg","onSubmit","_s","step","setStep","playerCount","setPlayerCount","playerNames","setPlayerNames","handlePlayerCountSubmit","event","preventDefault","Array","parseInt","fill","alert","handlePlayerNamesSubmit","slice","handlePlayerNameChange","index","newPlayerNames","target","value","children","className","type","min","max","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","map","name","_c","$RefreshReg$"],"sources":["/Users/kaschak/Documents/Coding projects/trans/tran/src/TournamentReg.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './css/TournamentReg.css';\n\nfunction TournamentReg({ onSubmit }) {\n  const [step, setStep] = useState(1);\n  const [playerCount, setPlayerCount] = useState('');\n  const [playerNames, setPlayerNames] = useState([]);\n\n  const handlePlayerCountSubmit = (event) => {\n    event.preventDefault();\n    if (playerCount >= 2 && playerCount <= 8) {\n      setPlayerNames(Array(parseInt(playerCount)).fill(''));\n      setStep(2);\n    } else {\n      alert('Please enter a valid player count between 2 and 8.');\n    }\n  };\n\n  const handlePlayerNamesSubmit = (event) => {\n    event.preventDefault();\n    onSubmit(playerNames.slice(0, playerCount));\n  };\n\n  const handlePlayerNameChange = (index, event) => {\n    const newPlayerNames = [...playerNames];\n    newPlayerNames[index] = event.target.value;\n    setPlayerNames(newPlayerNames);\n  };\n\n  return (\n    <div>\n      <div className=\"form-container\">\n        {step === 1 && (\n          <form onSubmit={handlePlayerCountSubmit}>\n            <label>\n              How many players will participate?\n              <input\n                type=\"number\"\n                min=\"2\"\n                max=\"8\"\n                value={playerCount}\n                onChange={(event) => setPlayerCount(event.target.value)}\n                required\n              />\n            </label>\n            <button type=\"submit\">Next</button>\n          </form>\n        )}\n      </div>\n      <div className=\"form-container\">\n        {step === 2 && (\n          <form onSubmit={handlePlayerNamesSubmit}>\n            {playerNames.map((name, index) => (\n              <label key={index}>\n                Player {index + 1} Name:\n                <input\n                  type=\"text\"\n                  value={name}\n                  onChange={(event) => handlePlayerNameChange(index, event)}\n                  required\n                />\n              </label>\n            ))}\n            <button type=\"submit\">Start Tournament</button>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default TournamentReg;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}