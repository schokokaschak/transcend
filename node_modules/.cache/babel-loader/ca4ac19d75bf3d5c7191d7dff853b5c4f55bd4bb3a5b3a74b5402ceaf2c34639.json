{"ast":null,"code":"var _jsxFileName = \"/Users/kaschak/Documents/Coding projects/trans/tran/src/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [selectedFriend, setSelectedFriend] = useState(null);\n  const [chatData, setChatData] = useState(null);\n  const backendURL = 'http://localhost:8000/chats/';\n  const handleSendMessage = () => {\n    if (message.trim() !== '') {\n      setChatHistory(prevChatHistory => [...prevChatHistory, message]);\n      setMessage('');\n    }\n  };\n  useEffect(() => {\n    fetch(backendURL, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${localStorage.getItem('Token')}` // Include the token in the Authorization header\n      }\n    }).then(response => response.json()).then(data => {\n      setChatData(data);\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  }, []); // Empty array means this effect runs once on mount\n\n  const handleFriendClick = friend => {\n    setSelectedFriend(friend);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Friends List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: chatData.map((friend, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n          onClick: () => handleFriendClick(friend),\n          children: friend\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-8\",\n      children: selectedFriend && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Chat with \", selectedFriend]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: chatHistory.map((chatMessage, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: chatMessage\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n_s(Chat, \"xkokxFeix+N1QC6zorGAMRKbLu4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","ListGroup","ListGroupItem","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","chatHistory","setChatHistory","selectedFriend","setSelectedFriend","chatData","setChatData","backendURL","handleSendMessage","trim","prevChatHistory","fetch","method","headers","localStorage","getItem","then","response","json","data","catch","error","console","handleFriendClick","friend","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","chatMessage","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/kaschak/Documents/Coding projects/trans/tran/src/Chat.jsx"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\n\nconst Chat = () => {\n\tconst [message, setMessage] = useState('');\n\tconst [chatHistory, setChatHistory] = useState([]);\n\tconst [selectedFriend, setSelectedFriend] = useState(null);\n\tconst [chatData, setChatData] = useState(null);\n\n\tconst backendURL = 'http://localhost:8000/chats/'\n\tconst handleSendMessage = () => {\n\t\tif (message.trim() !== '') {\n\t\t\tsetChatHistory(prevChatHistory => [...prevChatHistory, message]);\n\t\t\tsetMessage('');\n\t\t}\n\t};\n\n\n\tuseEffect(() => {\n\t\tfetch(backendURL, {\n\t\t  method: 'GET',\n\t\t  headers: {\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Authorization': `Token ${localStorage.getItem('Token')}` // Include the token in the Authorization header\n\t\t  },\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(data => {\n\t\t  setChatData(data);\n\t\t})\n\t\t.catch((error) => {\n\t\t  console.error('Error:', error);\n\t\t});\n\t  }, []); // Empty array means this effect runs once on mount\n\t  \n\t  const handleFriendClick = (friend) => {\n\t\tsetSelectedFriend(friend);\n\t  };\n\t\n\n\treturn (\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-md-4\">\n\t\t\t<h1>Friends List</h1>\n\t\t\t\t<ListGroup>\n\t\t\t\t{chatData.map((friend, index) => (\n\t\t\t\t\t<ListGroupItem key={index} onClick={() => handleFriendClick(friend)}>\n\t\t\t\t\t{friend}\n\t\t\t\t\t</ListGroupItem>\n\t\t\t\t))}\n\t\t\t\t</ListGroup>\n\t\t\t\t</div>\n\t\t\t<div className=\"col-md-8\">\n\t\t\t\t{selectedFriend && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>Chat with {selectedFriend}</h1>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{chatHistory.map((chatMessage, index) => (\n\t\t\t\t\t\t\t\t<p key={index}>{chatMessage}</p>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={message}\n\t\t\t\t\t\t\tonChange={e => setMessage(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button onClick={handleSendMessage}>Send</button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}